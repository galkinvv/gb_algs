#include <limits>
#include "z_ring.h"
#include "finite_field.h"
#include "combined_field.h"
#include "sparse_matrix_base.h"

//tests for big randdom matrices based on https://cloud.sagemath.com/projects/16ae0d9e-83b0-46c0-9630-d8d4469ec367/files/solvable%20matrices.sagews

TEST(SparseMatrixExactRandom, Z2determined)
{
	typedef FiniteFieldParam<ZPlusRing32>::Module<2> Param;
	Param::Matrix m;
	const auto E = m.ElementConstructor();
	{//9x9 matrix with det 1
		m.Clear();
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(4, 1u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(4, 1u);
		m.AddElement(5, 1u);
		m.AddElement(7, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddElement(5, 1u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddElement(5, 1u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 1u);
		m.AddElement(3, 1u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(5, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(4, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 1u);
		m.AddElement(3, 1u);
		m.AddElement(6, 1u);
		EXPECT_PRED2(ExpectKnownSolution, m, ilist({E(0, 1u), E(1, 1u), E(3, 1u), E(4, 1u), E(6, 1u), E(7, 1u)}));
	}
	{//the same matrix with to identical additional colums and rows (on the top)
		m.Clear();
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(2, 1u);
		m.AddElement(5, 1u);
		m.AddElement(7, 1u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(5, 1u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(2, 1u);
		m.AddElement(4, 1u);
		m.AddElement(5, 1u);
		m.AddElement(6, 1u);
		m.AddElement(7, 1u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddElement(5, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddElement(5, 1u);
		m.AddElement(6, 1u);
		m.AddElement(7, 1u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(4, 1u);
		m.AddElement(7, 1u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 1u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddElement(6, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(5, 1u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(4, 1u);
		m.AddElement(7, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		ExpectNoSolution(m);
	}
}

TEST(SparseMatrixExactRandom, Z3determined)
{
	typedef FiniteFieldParam<ZPlusRing32>::Module<3> Param;
	Param::Matrix m;
	const auto E = m.ElementConstructor();
	{
		m.Clear();
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(4, 1u);
		m.AddElement(6, 2u);
		m.AddElement(8, 2u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 2u);
		m.AddElement(2, 2u);
		m.AddElement(4, 2u);
		m.AddElement(5, 2u);
		m.AddElement(6, 1u);
		m.AddElement(7, 2u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 2u);
		m.AddElement(2, 1u);
		m.AddElement(3, 2u);
		m.AddElement(4, 1u);
		m.AddElement(5, 1u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 2u);
		m.AddElement(1, 2u);
		m.AddElement(2, 2u);
		m.AddElement(3, 1u);
		m.AddElement(4, 2u);
		m.AddRow();
		m.AddElement(0, 2u);
		m.AddElement(2, 1u);
		m.AddElement(3, 2u);
		m.AddElement(4, 2u);
		m.AddElement(5, 2u);
		m.AddElement(6, 2u);
		m.AddElement(8, 2u);
		m.AddRow();
		m.AddElement(0, 2u);
		m.AddElement(1, 2u);
		m.AddElement(3, 2u);
		m.AddElement(4, 1u);
		m.AddElement(6, 2u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 2u);
		m.AddElement(1, 1u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(5, 2u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 2u);
		m.AddElement(2, 2u);
		m.AddElement(3, 1u);
		m.AddElement(4, 2u);
		m.AddElement(5, 1u);
		m.AddElement(7, 1u);
		m.AddElement(8, 2u);
		m.AddRow();
		m.AddElement(0, 2u);
		m.AddElement(1, 2u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(6, 2u);
		EXPECT_PRED2(ExpectKnownSolution, m, ilist({E(0, 2u), E(1, 2u), E(2, 2u), E(3, 1u), E(4, 1u), E(5, 2u), E(6, 2u)}));
	}
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(2, 1u);
		m.AddElement(5, 1u);
		m.AddElement(7, 2u);
		m.AddElement(9, 2u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 2u);
		m.AddElement(3, 2u);
		m.AddElement(5, 2u);
		m.AddElement(6, 2u);
		m.AddElement(7, 1u);
		m.AddElement(8, 2u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 2u);
		m.AddElement(3, 1u);
		m.AddElement(4, 2u);
		m.AddElement(5, 1u);
		m.AddElement(6, 1u);
		m.AddElement(7, 1u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(1, 2u);
		m.AddElement(2, 2u);
		m.AddElement(3, 2u);
		m.AddElement(4, 1u);
		m.AddElement(5, 2u);
		m.AddRow();
		m.AddElement(1, 2u);
		m.AddElement(3, 1u);
		m.AddElement(4, 2u);
		m.AddElement(5, 2u);
		m.AddElement(6, 2u);
		m.AddElement(7, 2u);
		m.AddElement(9, 2u);
		m.AddRow();
		m.AddElement(1, 2u);
		m.AddElement(2, 2u);
		m.AddElement(4, 2u);
		m.AddElement(5, 1u);
		m.AddElement(7, 2u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 2u);
		m.AddElement(2, 1u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddElement(6, 2u);
		m.AddElement(7, 1u);
		m.AddElement(9, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 1u);
		m.AddElement(2, 2u);
		m.AddElement(3, 2u);
		m.AddElement(4, 1u);
		m.AddElement(5, 2u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddElement(9, 2u);
		m.AddRow();
		m.AddElement(1, 2u);
		m.AddElement(2, 2u);
		m.AddElement(3, 1u);
		m.AddElement(4, 1u);
		m.AddElement(7, 2u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		ExpectNoSolution(m);
	}
}

TEST(SparseMatrixExactRandom, Z7determined)
{
	typedef FiniteFieldParam<ZPlusRing32>::Module<7> Param;
	Param::Matrix m;
	const auto E = m.ElementConstructor();
	{
		m.Clear();
		m.AddRow();
		m.AddElement(1, 3u);
		m.AddElement(3, 2u);
		m.AddElement(4, 3u);
		m.AddElement(5, 1u);
		m.AddElement(6, 4u);
		m.AddElement(8, 6u);
		m.AddRow();
		m.AddElement(0, 4u);
		m.AddElement(1, 6u);
		m.AddElement(2, 5u);
		m.AddElement(3, 1u);
		m.AddElement(4, 6u);
		m.AddElement(5, 6u);
		m.AddElement(6, 3u);
		m.AddElement(7, 5u);
		m.AddElement(8, 3u);
		m.AddRow();
		m.AddElement(0, 2u);
		m.AddElement(1, 5u);
		m.AddElement(2, 2u);
		m.AddElement(3, 6u);
		m.AddElement(4, 4u);
		m.AddElement(5, 4u);
		m.AddElement(6, 4u);
		m.AddElement(7, 2u);
		m.AddElement(8, 3u);
		m.AddRow();
		m.AddElement(0, 6u);
		m.AddElement(1, 5u);
		m.AddElement(2, 6u);
		m.AddElement(3, 4u);
		m.AddElement(4, 6u);
		m.AddElement(5, 1u);
		m.AddElement(7, 1u);
		m.AddElement(8, 1u);
		m.AddRow();
		m.AddElement(0, 5u);
		m.AddElement(2, 4u);
		m.AddElement(3, 6u);
		m.AddElement(4, 6u);
		m.AddElement(5, 5u);
		m.AddElement(6, 6u);
		m.AddElement(7, 1u);
		m.AddElement(8, 5u);
		m.AddRow();
		m.AddElement(0, 5u);
		m.AddElement(1, 5u);
		m.AddElement(3, 4u);
		m.AddElement(4, 2u);
		m.AddElement(6, 6u);
		m.AddElement(7, 1u);
		m.AddElement(8, 3u);
		m.AddRow();
		m.AddElement(0, 5u);
		m.AddElement(1, 2u);
		m.AddElement(2, 3u);
		m.AddElement(3, 4u);
		m.AddElement(4, 1u);
		m.AddElement(5, 6u);
		m.AddElement(6, 3u);
		m.AddElement(7, 1u);
		m.AddElement(8, 3u);
		m.AddRow();
		m.AddElement(0, 2u);
		m.AddElement(1, 4u);
		m.AddElement(2, 5u);
		m.AddElement(3, 3u);
		m.AddElement(4, 6u);
		m.AddElement(5, 2u);
		m.AddElement(7, 3u);
		m.AddElement(8, 4u);
		m.AddRow();
		m.AddElement(0, 6u);
		m.AddElement(1, 5u);
		m.AddElement(2, 2u);
		m.AddElement(3, 3u);
		m.AddElement(5, 1u);
		m.AddElement(6, 5u);
		EXPECT_PRED2(ExpectKnownSolution, m, ilist({E(0, 6u), E(1, 1u), E(2, 1u), E(3, 1u), E(4, 4u), E(5, 3u), E(7, 1u), E(8, 5u)}));
	}
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(2, 3u);
		m.AddElement(4, 2u);
		m.AddElement(5, 3u);
		m.AddElement(6, 1u);
		m.AddElement(7, 4u);
		m.AddElement(9, 6u);
		m.AddRow();
		m.AddElement(1, 4u);
		m.AddElement(2, 6u);
		m.AddElement(3, 5u);
		m.AddElement(4, 1u);
		m.AddElement(5, 6u);
		m.AddElement(6, 6u);
		m.AddElement(7, 3u);
		m.AddElement(8, 5u);
		m.AddElement(9, 3u);
		m.AddRow();
		m.AddElement(1, 2u);
		m.AddElement(2, 5u);
		m.AddElement(3, 2u);
		m.AddElement(4, 6u);
		m.AddElement(5, 4u);
		m.AddElement(6, 4u);
		m.AddElement(7, 4u);
		m.AddElement(8, 2u);
		m.AddElement(9, 3u);
		m.AddRow();
		m.AddElement(1, 6u);
		m.AddElement(2, 5u);
		m.AddElement(3, 6u);
		m.AddElement(4, 4u);
		m.AddElement(5, 6u);
		m.AddElement(6, 1u);
		m.AddElement(8, 1u);
		m.AddElement(9, 1u);
		m.AddRow();
		m.AddElement(1, 5u);
		m.AddElement(3, 4u);
		m.AddElement(4, 6u);
		m.AddElement(5, 6u);
		m.AddElement(6, 5u);
		m.AddElement(7, 6u);
		m.AddElement(8, 1u);
		m.AddElement(9, 5u);
		m.AddRow();
		m.AddElement(1, 5u);
		m.AddElement(2, 5u);
		m.AddElement(4, 4u);
		m.AddElement(5, 2u);
		m.AddElement(7, 6u);
		m.AddElement(8, 1u);
		m.AddElement(9, 3u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 5u);
		m.AddElement(2, 2u);
		m.AddElement(3, 3u);
		m.AddElement(4, 4u);
		m.AddElement(5, 1u);
		m.AddElement(6, 6u);
		m.AddElement(7, 3u);
		m.AddElement(8, 1u);
		m.AddElement(9, 3u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 2u);
		m.AddElement(2, 4u);
		m.AddElement(3, 5u);
		m.AddElement(4, 3u);
		m.AddElement(5, 6u);
		m.AddElement(6, 2u);
		m.AddElement(8, 3u);
		m.AddElement(9, 4u);
		m.AddRow();
		m.AddElement(1, 6u);
		m.AddElement(2, 5u);
		m.AddElement(3, 2u);
		m.AddElement(4, 3u);
		m.AddElement(6, 1u);
		m.AddElement(7, 5u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		ExpectNoSolution(m);
	}
}



TEST(SparseMatrixExactRandom, Z251determined)
{
	typedef FiniteFieldParam<ZPlusRing32>::Module<251> Param;
	Param::Matrix m;
	const auto E = m.ElementConstructor();
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 27u);
		m.AddElement(1, 129u);
		m.AddElement(2, 11u);
		m.AddElement(3, 83u);
		m.AddElement(4, 130u);
		m.AddElement(5, 45u);
		m.AddElement(6, 175u);
		m.AddElement(7, 20u);
		m.AddElement(8, 223u);
		m.AddRow();
		m.AddElement(0, 146u);
		m.AddElement(1, 221u);
		m.AddElement(2, 193u);
		m.AddElement(3, 37u);
		m.AddElement(4, 217u);
		m.AddElement(5, 217u);
		m.AddElement(6, 124u);
		m.AddElement(7, 189u);
		m.AddElement(8, 121u);
		m.AddRow();
		m.AddElement(0, 101u);
		m.AddElement(1, 210u);
		m.AddElement(2, 104u);
		m.AddElement(3, 225u);
		m.AddElement(4, 159u);
		m.AddElement(5, 165u);
		m.AddElement(6, 162u);
		m.AddElement(7, 77u);
		m.AddElement(8, 141u);
		m.AddRow();
		m.AddElement(0, 230u);
		m.AddElement(1, 195u);
		m.AddElement(2, 249u);
		m.AddElement(3, 149u);
		m.AddElement(4, 245u);
		m.AddElement(5, 65u);
		m.AddElement(6, 26u);
		m.AddElement(7, 67u);
		m.AddElement(8, 53u);
		m.AddRow();
		m.AddElement(0, 202u);
		m.AddElement(1, 15u);
		m.AddElement(2, 152u);
		m.AddElement(3, 243u);
		m.AddElement(4, 227u);
		m.AddElement(5, 194u);
		m.AddElement(6, 235u);
		m.AddElement(7, 42u);
		m.AddElement(8, 204u);
		m.AddRow();
		m.AddElement(0, 201u);
		m.AddElement(1, 209u);
		m.AddElement(2, 26u);
		m.AddElement(3, 172u);
		m.AddElement(4, 100u);
		m.AddElement(5, 15u);
		m.AddElement(6, 232u);
		m.AddElement(7, 48u);
		m.AddElement(8, 139u);
		m.AddRow();
		m.AddElement(0, 209u);
		m.AddElement(1, 95u);
		m.AddElement(2, 135u);
		m.AddElement(3, 152u);
		m.AddElement(4, 49u);
		m.AddElement(5, 239u);
		m.AddElement(6, 110u);
		m.AddElement(7, 50u);
		m.AddElement(8, 121u);
		m.AddRow();
		m.AddElement(0, 105u);
		m.AddElement(1, 178u);
		m.AddElement(2, 209u);
		m.AddElement(3, 107u);
		m.AddElement(4, 218u);
		m.AddElement(5, 103u);
		m.AddElement(6, 18u);
		m.AddElement(7, 116u);
		m.AddElement(8, 168u);
		m.AddRow();
		m.AddElement(0, 244u);
		m.AddElement(1, 188u);
		m.AddElement(2, 84u);
		m.AddElement(3, 134u);
		m.AddElement(4, 11u);
		m.AddElement(5, 41u);
		m.AddElement(6, 207u);
		m.AddElement(7, 9u);
		m.AddElement(8, 21u);
		EXPECT_PRED2(ExpectKnownSolution, m, ilist({E(0, 52u), E(1, 110u), E(2, 126u), E(3, 49u), E(4, 85u), E(5, 142u), E(6, 194u), E(7, 119u), E(8, 162u)}));
	}
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 27u);
		m.AddElement(2, 129u);
		m.AddElement(3, 11u);
		m.AddElement(4, 83u);
		m.AddElement(5, 130u);
		m.AddElement(6, 45u);
		m.AddElement(7, 175u);
		m.AddElement(8, 20u);
		m.AddElement(9, 223u);
		m.AddRow();
		m.AddElement(1, 146u);
		m.AddElement(2, 221u);
		m.AddElement(3, 193u);
		m.AddElement(4, 37u);
		m.AddElement(5, 217u);
		m.AddElement(6, 217u);
		m.AddElement(7, 124u);
		m.AddElement(8, 189u);
		m.AddElement(9, 121u);
		m.AddRow();
		m.AddElement(1, 101u);
		m.AddElement(2, 210u);
		m.AddElement(3, 104u);
		m.AddElement(4, 225u);
		m.AddElement(5, 159u);
		m.AddElement(6, 165u);
		m.AddElement(7, 162u);
		m.AddElement(8, 77u);
		m.AddElement(9, 141u);
		m.AddRow();
		m.AddElement(1, 230u);
		m.AddElement(2, 195u);
		m.AddElement(3, 249u);
		m.AddElement(4, 149u);
		m.AddElement(5, 245u);
		m.AddElement(6, 65u);
		m.AddElement(7, 26u);
		m.AddElement(8, 67u);
		m.AddElement(9, 53u);
		m.AddRow();
		m.AddElement(1, 202u);
		m.AddElement(2, 15u);
		m.AddElement(3, 152u);
		m.AddElement(4, 243u);
		m.AddElement(5, 227u);
		m.AddElement(6, 194u);
		m.AddElement(7, 235u);
		m.AddElement(8, 42u);
		m.AddElement(9, 204u);
		m.AddRow();
		m.AddElement(1, 201u);
		m.AddElement(2, 209u);
		m.AddElement(3, 26u);
		m.AddElement(4, 172u);
		m.AddElement(5, 100u);
		m.AddElement(6, 15u);
		m.AddElement(7, 232u);
		m.AddElement(8, 48u);
		m.AddElement(9, 139u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 209u);
		m.AddElement(2, 95u);
		m.AddElement(3, 135u);
		m.AddElement(4, 152u);
		m.AddElement(5, 49u);
		m.AddElement(6, 239u);
		m.AddElement(7, 110u);
		m.AddElement(8, 50u);
		m.AddElement(9, 121u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 105u);
		m.AddElement(2, 178u);
		m.AddElement(3, 209u);
		m.AddElement(4, 107u);
		m.AddElement(5, 218u);
		m.AddElement(6, 103u);
		m.AddElement(7, 18u);
		m.AddElement(8, 116u);
		m.AddElement(9, 168u);
		m.AddRow();
		m.AddElement(1, 244u);
		m.AddElement(2, 188u);
		m.AddElement(3, 84u);
		m.AddElement(4, 134u);
		m.AddElement(5, 11u);
		m.AddElement(6, 41u);
		m.AddElement(7, 207u);
		m.AddElement(8, 9u);
		m.AddElement(9, 21u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		ExpectNoSolution(m);
	}
}



TEST(SparseMatrixExactRandom, Z65521determined)
{
	typedef FiniteFieldParam<ZPlusRing32>::Module<65521> Param;
	Param::Matrix m;
	const auto E = m.ElementConstructor();
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 7301u);
		m.AddElement(1, 33700u);
		m.AddElement(2, 2928u);
		m.AddElement(3, 21785u);
		m.AddElement(4, 34110u);
		m.AddElement(5, 11971u);
		m.AddElement(6, 45921u);
		m.AddElement(7, 5243u);
		m.AddElement(8, 58252u);
		m.AddRow();
		m.AddElement(0, 38126u);
		m.AddElement(1, 57813u);
		m.AddElement(2, 50634u);
		m.AddElement(3, 9807u);
		m.AddElement(4, 56735u);
		m.AddElement(5, 56707u);
		m.AddElement(6, 32417u);
		m.AddElement(7, 49505u);
		m.AddElement(8, 31844u);
		m.AddRow();
		m.AddElement(0, 26573u);
		m.AddElement(1, 55051u);
		m.AddElement(2, 27217u);
		m.AddElement(3, 58836u);
		m.AddElement(4, 41640u);
		m.AddElement(5, 43227u);
		m.AddElement(6, 42514u);
		m.AddElement(7, 20134u);
		m.AddElement(8, 37009u);
		m.AddRow();
		m.AddElement(0, 60136u);
		m.AddElement(1, 51103u);
		m.AddElement(2, 65116u);
		m.AddElement(3, 38983u);
		m.AddElement(4, 64097u);
		m.AddElement(5, 17055u);
		m.AddElement(6, 6843u);
		m.AddElement(7, 17541u);
		m.AddElement(8, 13851u);
		m.AddRow();
		m.AddElement(0, 52731u);
		m.AddElement(1, 4171u);
		m.AddElement(2, 39837u);
		m.AddElement(3, 63634u);
		m.AddElement(4, 59292u);
		m.AddElement(5, 50816u);
		m.AddElement(6, 61579u);
		m.AddElement(7, 11172u);
		m.AddElement(8, 53362u);
		m.AddRow();
		m.AddElement(0, 52696u);
		m.AddElement(1, 54712u);
		m.AddElement(2, 6826u);
		m.AddElement(3, 45062u);
		m.AddElement(4, 26322u);
		m.AddElement(5, 3945u);
		m.AddElement(6, 60796u);
		m.AddElement(7, 12626u);
		m.AddElement(8, 36318u);
		m.AddRow();
		m.AddElement(0, 54577u);
		m.AddElement(1, 25027u);
		m.AddElement(2, 35280u);
		m.AddElement(3, 39867u);
		m.AddElement(4, 12954u);
		m.AddElement(5, 62410u);
		m.AddElement(6, 28822u);
		m.AddElement(7, 13127u);
		m.AddElement(8, 31841u);
		m.AddRow();
		m.AddElement(0, 27450u);
		m.AddElement(1, 46600u);
		m.AddElement(2, 54798u);
		m.AddElement(3, 28105u);
		m.AddElement(4, 56981u);
		m.AddElement(5, 26933u);
		m.AddElement(6, 4838u);
		m.AddElement(7, 30333u);
		m.AddElement(8, 44031u);
		m.AddRow();
		m.AddElement(0, 63749u);
		m.AddElement(1, 49220u);
		m.AddElement(2, 21961u);
		m.AddElement(3, 35095u);
		m.AddElement(4, 2877u);
		m.AddElement(5, 10769u);
		m.AddElement(6, 54133u);
		m.AddElement(7, 2398u);
		m.AddElement(8, 5494u);
		EXPECT_PRED2(ExpectKnownSolution, m, ilist({E(0, 57071u), E(1, 5129u), E(2, 50509u), E(3, 34248u), E(4, 57444u), E(5, 1389u), E(6, 19864u), E(7, 61479u), E(8, 52244u)}));
	}
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 7301u);
		m.AddElement(2, 33700u);
		m.AddElement(3, 2928u);
		m.AddElement(4, 21785u);
		m.AddElement(5, 34110u);
		m.AddElement(6, 11971u);
		m.AddElement(7, 45921u);
		m.AddElement(8, 5243u);
		m.AddElement(9, 58252u);
		m.AddRow();
		m.AddElement(1, 38126u);
		m.AddElement(2, 57813u);
		m.AddElement(3, 50634u);
		m.AddElement(4, 9807u);
		m.AddElement(5, 56735u);
		m.AddElement(6, 56707u);
		m.AddElement(7, 32417u);
		m.AddElement(8, 49505u);
		m.AddElement(9, 31844u);
		m.AddRow();
		m.AddElement(1, 26573u);
		m.AddElement(2, 55051u);
		m.AddElement(3, 27217u);
		m.AddElement(4, 58836u);
		m.AddElement(5, 41640u);
		m.AddElement(6, 43227u);
		m.AddElement(7, 42514u);
		m.AddElement(8, 20134u);
		m.AddElement(9, 37009u);
		m.AddRow();
		m.AddElement(1, 60136u);
		m.AddElement(2, 51103u);
		m.AddElement(3, 65116u);
		m.AddElement(4, 38983u);
		m.AddElement(5, 64097u);
		m.AddElement(6, 17055u);
		m.AddElement(7, 6843u);
		m.AddElement(8, 17541u);
		m.AddElement(9, 13851u);
		m.AddRow();
		m.AddElement(1, 52731u);
		m.AddElement(2, 4171u);
		m.AddElement(3, 39837u);
		m.AddElement(4, 63634u);
		m.AddElement(5, 59292u);
		m.AddElement(6, 50816u);
		m.AddElement(7, 61579u);
		m.AddElement(8, 11172u);
		m.AddElement(9, 53362u);
		m.AddRow();
		m.AddElement(1, 52696u);
		m.AddElement(2, 54712u);
		m.AddElement(3, 6826u);
		m.AddElement(4, 45062u);
		m.AddElement(5, 26322u);
		m.AddElement(6, 3945u);
		m.AddElement(7, 60796u);
		m.AddElement(8, 12626u);
		m.AddElement(9, 36318u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 54577u);
		m.AddElement(2, 25027u);
		m.AddElement(3, 35280u);
		m.AddElement(4, 39867u);
		m.AddElement(5, 12954u);
		m.AddElement(6, 62410u);
		m.AddElement(7, 28822u);
		m.AddElement(8, 13127u);
		m.AddElement(9, 31841u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 27450u);
		m.AddElement(2, 46600u);
		m.AddElement(3, 54798u);
		m.AddElement(4, 28105u);
		m.AddElement(5, 56981u);
		m.AddElement(6, 26933u);
		m.AddElement(7, 4838u);
		m.AddElement(8, 30333u);
		m.AddElement(9, 44031u);
		m.AddRow();
		m.AddElement(1, 63749u);
		m.AddElement(2, 49220u);
		m.AddElement(3, 21961u);
		m.AddElement(4, 35095u);
		m.AddElement(5, 2877u);
		m.AddElement(6, 10769u);
		m.AddElement(7, 54133u);
		m.AddElement(8, 2398u);
		m.AddElement(9, 5494u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		ExpectNoSolution(m);
	}
}


TEST(SparseMatrixExactRandom, Z4294967291determined)
{
	typedef FiniteFieldParam<ZPlusRing32>::Module<4294967291> Param;
	Param::Matrix m;
	const auto E = m.ElementConstructor();
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 478628121u);
		m.AddElement(1, 2209105746u);
		m.AddElement(2, 191940736u);
		m.AddElement(3, 1428036279u);
		m.AddElement(4, 2235961017u);
		m.AddElement(5, 784748527u);
		m.AddElement(6, 3010204752u);
		m.AddElement(7, 343706789u);
		m.AddElement(8, 3818485961u);
		m.AddRow();
		m.AddElement(0, 2499211391u);
		m.AddElement(1, 3789737604u);
		m.AddElement(2, 3319135296u);
		m.AddElement(3, 642912421u);
		m.AddElement(4, 3719057148u);
		m.AddElement(5, 3717258784u);
		m.AddElement(6, 2125000154u);
		m.AddElement(7, 3245145325u);
		m.AddElement(8, 2087463335u);
		m.AddRow();
		m.AddElement(0, 1741927723u);
		m.AddElement(1, 3608662274u);
		m.AddElement(2, 1784106130u);
		m.AddElement(3, 3856800783u);
		m.AddElement(4, 2729549155u);
		m.AddElement(5, 2833630366u);
		m.AddElement(6, 2786885006u);
		m.AddElement(7, 1319861087u);
		m.AddElement(8, 2425994581u);
		m.AddRow();
		m.AddElement(0, 3941977745u);
		m.AddElement(1, 3349890746u);
		m.AddElement(2, 4268460778u);
		m.AddElement(3, 2555410345u);
		m.AddElement(4, 4201643188u);
		m.AddElement(5, 1118017704u);
		m.AddElement(6, 448613390u);
		m.AddElement(7, 1149849000u);
		m.AddElement(8, 907981934u);
		m.AddRow();
		m.AddElement(0, 3456621069u);
		m.AddElement(1, 273419984u);
		m.AddElement(2, 2611397164u);
		m.AddElement(3, 4171336748u);
		m.AddElement(4, 3886659778u);
		m.AddElement(5, 3331086088u);
		m.AddElement(6, 4036605698u);
		m.AddElement(7, 732392530u);
		m.AddElement(8, 3497992326u);
		m.AddRow();
		m.AddElement(0, 3454323021u);
		m.AddElement(1, 3586445432u);
		m.AddElement(2, 447504875u);
		m.AddElement(3, 2953916574u);
		m.AddElement(4, 1725467144u);
		m.AddElement(5, 258612628u);
		m.AddElement(6, 3985247128u);
		m.AddElement(7, 827682185u);
		m.AddElement(8, 2380720762u);
		m.AddRow();
		m.AddElement(0, 3577613363u);
		m.AddElement(1, 1640569207u);
		m.AddElement(2, 2312644797u);
		m.AddElement(3, 2613371688u);
		m.AddElement(4, 849163433u);
		m.AddElement(5, 4091046612u);
		m.AddElement(6, 1889344658u);
		m.AddElement(7, 860524316u);
		m.AddElement(8, 2087211265u);
		m.AddRow();
		m.AddElement(0, 1799419267u);
		m.AddElement(1, 3054683451u);
		m.AddElement(2, 3592113174u);
		m.AddElement(3, 1842345590u);
		m.AddElement(4, 3735186678u);
		m.AddElement(5, 1765495516u);
		m.AddElement(6, 317188742u);
		m.AddElement(7, 1988376558u);
		m.AddElement(8, 2886308067u);
		m.AddRow();
		m.AddElement(0, 4178834707u);
		m.AddElement(1, 3226435120u);
		m.AddElement(2, 1439596859u);
		m.AddElement(3, 2300541939u);
		m.AddElement(4, 188607665u);
		m.AddElement(5, 705931203u);
		m.AddElement(6, 3548530303u);
		m.AddElement(7, 157237396u);
		m.AddElement(8, 360144761u);
		EXPECT_PRED2(ExpectKnownSolution, m, ilist({E(0, 3423433692u), E(1, 961847724u), E(2, 1535693788u), E(3, 822348375u), E(4, 4167478196u), E(5, 4012028733u), E(6, 2330445705u), E(7, 136613647u), E(8, 2870811959u)}));
	}
	{
		m.Clear();
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 478628121u);
		m.AddElement(2, 2209105746u);
		m.AddElement(3, 191940736u);
		m.AddElement(4, 1428036279u);
		m.AddElement(5, 2235961017u);
		m.AddElement(6, 784748527u);
		m.AddElement(7, 3010204752u);
		m.AddElement(8, 343706789u);
		m.AddElement(9, 3818485961u);
		m.AddRow();
		m.AddElement(1, 2499211391u);
		m.AddElement(2, 3789737604u);
		m.AddElement(3, 3319135296u);
		m.AddElement(4, 642912421u);
		m.AddElement(5, 3719057148u);
		m.AddElement(6, 3717258784u);
		m.AddElement(7, 2125000154u);
		m.AddElement(8, 3245145325u);
		m.AddElement(9, 2087463335u);
		m.AddRow();
		m.AddElement(1, 1741927723u);
		m.AddElement(2, 3608662274u);
		m.AddElement(3, 1784106130u);
		m.AddElement(4, 3856800783u);
		m.AddElement(5, 2729549155u);
		m.AddElement(6, 2833630366u);
		m.AddElement(7, 2786885006u);
		m.AddElement(8, 1319861087u);
		m.AddElement(9, 2425994581u);
		m.AddRow();
		m.AddElement(1, 3941977745u);
		m.AddElement(2, 3349890746u);
		m.AddElement(3, 4268460778u);
		m.AddElement(4, 2555410345u);
		m.AddElement(5, 4201643188u);
		m.AddElement(6, 1118017704u);
		m.AddElement(7, 448613390u);
		m.AddElement(8, 1149849000u);
		m.AddElement(9, 907981934u);
		m.AddRow();
		m.AddElement(1, 3456621069u);
		m.AddElement(2, 273419984u);
		m.AddElement(3, 2611397164u);
		m.AddElement(4, 4171336748u);
		m.AddElement(5, 3886659778u);
		m.AddElement(6, 3331086088u);
		m.AddElement(7, 4036605698u);
		m.AddElement(8, 732392530u);
		m.AddElement(9, 3497992326u);
		m.AddRow();
		m.AddElement(1, 3454323021u);
		m.AddElement(2, 3586445432u);
		m.AddElement(3, 447504875u);
		m.AddElement(4, 2953916574u);
		m.AddElement(5, 1725467144u);
		m.AddElement(6, 258612628u);
		m.AddElement(7, 3985247128u);
		m.AddElement(8, 827682185u);
		m.AddElement(9, 2380720762u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(1, 3577613363u);
		m.AddElement(2, 1640569207u);
		m.AddElement(3, 2312644797u);
		m.AddElement(4, 2613371688u);
		m.AddElement(5, 849163433u);
		m.AddElement(6, 4091046612u);
		m.AddElement(7, 1889344658u);
		m.AddElement(8, 860524316u);
		m.AddElement(9, 2087211265u);
		m.AddElement(10, 1u);
		m.AddRow();
		m.AddElement(1, 1799419267u);
		m.AddElement(2, 3054683451u);
		m.AddElement(3, 3592113174u);
		m.AddElement(4, 1842345590u);
		m.AddElement(5, 3735186678u);
		m.AddElement(6, 1765495516u);
		m.AddElement(7, 317188742u);
		m.AddElement(8, 1988376558u);
		m.AddElement(9, 2886308067u);
		m.AddRow();
		m.AddElement(1, 4178834707u);
		m.AddElement(2, 3226435120u);
		m.AddElement(3, 1439596859u);
		m.AddElement(4, 2300541939u);
		m.AddElement(5, 188607665u);
		m.AddElement(6, 705931203u);
		m.AddElement(7, 3548530303u);
		m.AddElement(8, 157237396u);
		m.AddElement(9, 360144761u);
		m.AddRow();
		m.AddElement(0, 1u);
		m.AddElement(10, 1u);
		ExpectNoSolution(m);
	}
}
