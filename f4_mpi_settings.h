#ifndef f4_mpi_settings_h
#define f4_mpi_settings_h

#ifdef __cplusplus
extern "C" {
#endif

typedef enum LibF4ReturnCode_enum{
	LIBF4_NO_ERROR=0,
	LIBF4_ERR_PARSE_FAILED=-1,
	LIBF4_ERR_INPUT_OPEN_FAILED=-2,
	LIBF4_ERR_OUTPUT_OPEN_FAILED=-3
} LibF4ReturnCode;

//This file contains settings
typedef struct F4AlgOptions_struct {
	/**Сбор статистики по матрицам.
	Установка в 1 включает вывод в файл outputName.matrinfo статистику по размерам,
	разреженности и времени для каждой из матриц, возникших в алгоритме.
	Эта опция отключена в F4F2MPI.
	*/
	int detailedMatrixInfo;

	/** Использование сильно ступенчатого вида.
	Определяет, будет ли проводиться на каждом шаге приведение к сильно ступенчатому виду, или просто к ступенчатому.
	*/
	int diagonalEachStep;

	/**Группировка данных перед пересылкой по MPI.
	Указывает, следует ли пытаться минимизировать число отдельных вызовов коммуникационных процедур MPI (1),
	или делать больше MPI-вызовов, но избежать лишних явных копирований больших объёмов данных в памяти (0)
	*/
	int MPIUseBigSends;

	/**Способ выбора строк.
	Задаёт критерий выбора редуцирующих строк: по ведущему элементу (0), или по числу ненулевых элементов (1)
	*/
	int useSizesForSelectingRow;

	/**Авторедуцированность рузультата.
	При установки в 1 в конце проводится авторедукция полученного базиса, что гарантирует единственность резульатата.
	*/
	int autoReduceBasis;

	/**минимальный пересылаемый блок строк.
	Количество строк, обрабатываемое за одну итерацию внешнего цикла метода Гаусса, и, как следствие, количество строк пересылаемых между процессорами на одной итерации.
	*/
	int MPIBlockSize;

	/**блок строк для внутреннего цикла.
	Количество строк, обрабатываемое за одну итерацию внутреннего цикла метода Гаусса (на одном процессоре). Оптимальное значение зависит от разреженности матриц и параметров кеш-памяти.
	*/
	int innerGaussBlockSize;

	/**статистика по времени.
	Установка в 1 включает вывод в файл outputName.stats статистику по временным затратам, в различных частях алгоритма.
	*/
	int profileTime;

	/**Минимально интересный процент времени в статистике.
	При включении опции profileTime этот параметр задаёт минимальный процент времени, проведённый в процедуре, для того, чтоб эта процедура попала в файл со статистикой.
	*/
	double minPercent;

	/**
	Выводит некоторую информацию в stdout.
	Позволяет узнавать число редуцированных матриц (и как следствий итераций основного цикла F4) в процессе работы библиотеки.
	*/
	int showInfoToStdout;

	/**
	 *	Выводит некоторую информацию в лог в формате latex.
	 */
	int generateLatexLog;

	/**
	 *	Выбирает запускаемый алгоритм.
	 */
	int selectedAlgo;
	
	
} F4AlgOptions;

#ifdef __cplusplus
}
#endif

#endif

